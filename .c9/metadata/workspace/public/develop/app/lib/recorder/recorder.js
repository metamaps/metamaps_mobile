{"filter":false,"title":"recorder.js","tooltip":"/public/develop/app/lib/recorder/recorder.js","undoManager":{"mark":2,"position":2,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":18}},"text":"(function(window){"},{"action":"insertText","range":{"start":{"row":0,"column":18},"end":{"row":1,"column":0}},"text":"\r\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":90,"column":0}},"lines":["","  var WORKER_PATH = 'recorderWorker.js';","","  var Recorder = function(source, cfg){","    var config = cfg || {};","    var bufferLen = config.bufferLen || 4096;","    this.context = source.context;","    this.node = (this.context.createScriptProcessor ||","                 this.context.createJavaScriptNode).call(this.context,","                                                         bufferLen, 2, 2);","    var worker = new Worker(config.workerPath || WORKER_PATH);","    worker.postMessage({","      command: 'init',","      config: {","        sampleRate: this.context.sampleRate","      }","    });","    var recording = false,","      currCallback;","","    this.node.onaudioprocess = function(e){","      if (!recording) return;","      worker.postMessage({","        command: 'record',","        buffer: [","          e.inputBuffer.getChannelData(0),","          e.inputBuffer.getChannelData(1)","        ]","      });","    }","","    this.configure = function(cfg){","      for (var prop in cfg){","        if (cfg.hasOwnProperty(prop)){","          config[prop] = cfg[prop];","        }","      }","    }","","    this.record = function(){","      recording = true;","    }","","    this.stop = function(){","      recording = false;","    }","","    this.clear = function(){","      worker.postMessage({ command: 'clear' });","    }","","    this.getBuffer = function(cb) {","      currCallback = cb || config.callback;","      worker.postMessage({ command: 'getBuffer' })","    }","","    this.exportWAV = function(cb, type){","      currCallback = cb || config.callback;","      type = type || config.type || 'audio/wav';","      if (!currCallback) throw new Error('Callback not set');","      worker.postMessage({","        command: 'exportWAV',","        type: type","      });","    }","","    worker.onmessage = function(e){","      var blob = e.data;","      currCallback(blob);","    }","","    source.connect(this.node);","    this.node.connect(this.context.destination);    //this should not be necessary","  };","","  Recorder.forceDownload = function(blob, filename){","    var url = (window.URL || window.webkitURL).createObjectURL(blob);","    console.log(url);","    var link = window.document.createElement('a');","    link.href = url;","    link.download = filename || 'output.wav';","    var click = document.createEvent(\"Event\");","    click.initEvent(\"click\", true, true);","    link.dispatchEvent(click);","  }","","  window.Recorder = Recorder;","","})(window);"]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":78,"column":0},"end":{"row":78,"column":21}},"text":"    console.log(url);"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":77,"column":69},"end":{"row":78,"column":0}},"text":"\r\n"}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":77,"column":69},"end":{"row":77,"column":69},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":59,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1403379073061,"hash":"725d605892a687f028eeda89718fd1dc15ea5ddd"}